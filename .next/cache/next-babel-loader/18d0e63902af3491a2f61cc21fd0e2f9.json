{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport var initalToolbarState = {\n  show: false\n};\nexport var ToolbarContext = React.createContext(initalToolbarState);\nexport var ToolbarProvider = function ToolbarProvider(_ref) {\n  var children = _ref.children;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      show = _React$useState2[0],\n      setShow = _React$useState2[1];\n\n  return __jsx(ToolbarContext.Provider, {\n    value: {\n      show: show,\n      setShow: setShow\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/context/toolbarContext.tsx"],"names":["React","initalToolbarState","show","ToolbarContext","createContext","ToolbarProvider","children","useState","setShow"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AASA,OAAO,IAAMC,kBAA4B,GAAG;AACxCC,EAAAA,IAAI,EAAE;AADkC,CAArC;AAIP,OAAO,IAAMC,cAAc,GAAGH,KAAK,CAACI,aAAN,CAA8BH,kBAA9B,CAAvB;AAMP,OAAO,IAAMI,eAA0D,GAAG,SAA7DA,eAA6D,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,wBACjEN,KAAK,CAACO,QAAN,CAAe,KAAf,CADiE;AAAA;AAAA,MAClFL,IADkF;AAAA,MAC5EM,OAD4E;;AAIxF,SACI,MAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACN,MAAAA,IAAI,EAAJA,IAAD;AAAOM,MAAAA,OAAO,EAAPA;AAAP;AAAhC,KACKF,QADL,CADJ;AAKH,CATM","sourcesContent":["import React from 'react'\n\nexport type TSetShow = React.Dispatch<React.SetStateAction<any>>\n\nexport interface IToolbar {\n    show: boolean,\n    setShow?: TSetShow\n}\n\nexport const initalToolbarState: IToolbar = {\n    show: false\n}\n\nexport const ToolbarContext = React.createContext<IToolbar>(initalToolbarState)\n\ninterface IToolbarProvider {\n    children: any\n}\n\nexport const ToolbarProvider: React.FunctionComponent<IToolbarProvider> = ({ children }) => {\n    const[show, setShow] = React.useState(false)\n\n\n    return (\n        <ToolbarContext.Provider value={{show, setShow}}>\n            {children}\n        </ToolbarContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}