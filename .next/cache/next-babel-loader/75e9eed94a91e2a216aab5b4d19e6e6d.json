{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Cover from '../../components/Cover/Cover';\nimport Layout from '../../components/UI/Layout/Layout';\nimport Content from '../../components/Content/Content';\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner';\nimport { PortfolioContext, TPortfolioActionTypes } from '../../context/portfolioContext';\n\nvar css = require('./Home.module.css');\n\nvar Home = function Home() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      bgLoaded = _React$useState2[0],\n      setBgLoaded = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      ready = _React$useState6[0],\n      setReady = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (bgLoaded && !loading) setReady(true);\n  }, [bgLoaded, loading]);\n  React.useEffect(function () {\n    // check if bg image is already cached\n    // if yes, set as loaded\n    var image = new Image();\n    image.src = '/images/palm.png';\n    if (image.complete) setBgLoaded(true);\n  }, []);\n  var portfolioContext = React.useContext(PortfolioContext);\n  var portfolioState = portfolioContext.state;\n  var portfolioDispatch = portfolioContext.dispatch;\n  React.useEffect(function () {\n    if (portfolioState.items.length === 0) {\n      portfolioDispatch({\n        type: TPortfolioActionTypes.FETCH_ITEMS\n      });\n    } else {\n      setLoading(false);\n    }\n  }, [portfolioState.items]);\n  return __jsx(React.Fragment, null, __jsx(Loading, {\n    show: !ready\n  }), __jsx(Layout, null, __jsx(Cover, {\n    show: ready,\n    load: function load() {\n      return setBgLoaded(true);\n    }\n  }), bgLoaded && !loading && __jsx(Content, null)));\n};\n\nvar Loading = function Loading(_ref) {\n  var show = _ref.show;\n  var styles = [css.Loading, !show && css.out].join(' ');\n  return __jsx(\"div\", {\n    className: styles\n  }, __jsx(CubeSpinner, null));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/containers/Home/Home.tsx"],"names":["React","Cover","Layout","Content","CubeSpinner","PortfolioContext","TPortfolioActionTypes","css","require","Home","useState","bgLoaded","setBgLoaded","loading","setLoading","ready","setReady","useEffect","image","Image","src","complete","portfolioContext","useContext","portfolioState","state","portfolioDispatch","dispatch","items","length","type","FETCH_ITEMS","Loading","show","styles","out","join"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA,SAA4BC,gBAA5B,EAA+DC,qBAA/D,QAA4F,gCAA5F;;AAIA,IAAMC,GAAG,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AAEA,IAAMC,IAAc,GAAG,SAAjBA,IAAiB,GAAmB;AAAA,wBACNT,KAAK,CAACU,QAAN,CAAwB,KAAxB,CADM;AAAA;AAAA,MAC/BC,QAD+B;AAAA,MACrBC,WADqB;;AAAA,yBAERZ,KAAK,CAACU,QAAN,CAAwB,IAAxB,CAFQ;AAAA;AAAA,MAE/BG,OAF+B;AAAA,MAEtBC,UAFsB;;AAAA,yBAGZd,KAAK,CAACU,QAAN,CAAwB,KAAxB,CAHY;AAAA;AAAA,MAG/BK,KAH+B;AAAA,MAGxBC,QAHwB;;AAKtChB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,YAAM;AAClB,QAAIN,QAAQ,IAAI,CAACE,OAAjB,EAA0BG,QAAQ,CAAC,IAAD,CAAR;AAC7B,GAFD,EAEG,CAACL,QAAD,EAAWE,OAAX,CAFH;AAIAb,EAAAA,KAAK,CAACiB,SAAN,CAAgB,YAAM;AAClB;AACA;AACA,QAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,IAAAA,KAAK,CAACE,GAAN,GAAY,kBAAZ;AACA,QAAIF,KAAK,CAACG,QAAV,EAAoBT,WAAW,CAAC,IAAD,CAAX;AACvB,GAND,EAMG,EANH;AAQA,MAAMU,gBAAmC,GAAGtB,KAAK,CAACuB,UAAN,CAAiBlB,gBAAjB,CAA5C;AACA,MAAMmB,cAA+B,GAAGF,gBAAgB,CAACG,KAAzD;AACA,MAAMC,iBAA4B,GAAGJ,gBAAgB,CAACK,QAAtD;AAEA3B,EAAAA,KAAK,CAACiB,SAAN,CAAgB,YAAM;AAClB,QAAIO,cAAc,CAACI,KAAf,CAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACnCH,MAAAA,iBAAiB,CAAC;AAAEI,QAAAA,IAAI,EAAExB,qBAAqB,CAACyB;AAA9B,OAAD,CAAjB;AACF,KAFF,MAEQ;AACJjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACF;AACL,GAND,EAMG,CAACU,cAAc,CAACI,KAAhB,CANH;AAQA,SACI,4BACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAE,CAACb;AAAhB,IADJ,EAEI,MAAC,MAAD,QACI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAb;AAAoB,IAAA,IAAI,EAAE;AAAA,aAAMH,WAAW,CAAC,IAAD,CAAjB;AAAA;AAA1B,IADJ,EAEMD,QAAQ,IAAK,CAACE,OAAd,IAAyB,MAAC,OAAD,OAF/B,CAFJ,CADJ;AASH,CAtCD;;AA4CA,IAAMmB,OAAmD,GAAG,SAAtDA,OAAsD,OAA2B;AAAA,MAAxBC,IAAwB,QAAxBA,IAAwB;AACnF,MAAMC,MAAM,GAAG,CACX3B,GAAG,CAACyB,OADO,EAEX,CAACC,IAAD,IAAS1B,GAAG,CAAC4B,GAFF,EAGbC,IAHa,CAGR,GAHQ,CAAf;AAKA,SACI;AAAK,IAAA,SAAS,EAAEF;AAAhB,KACI,MAAC,WAAD,OADJ,CADJ;AAKH,CAXD;;AAaA,eAAezB,IAAf","sourcesContent":["import React from 'react'\r\n\r\nimport {Â NextPage } from 'next'\r\nimport Cover from '../../components/Cover/Cover'\r\nimport Layout from '../../components/UI/Layout/Layout'\r\nimport Content from '../../components/Content/Content'\r\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\r\nimport { IPortfolioContext, PortfolioContext, TPortfolioState, TPortfolioActionTypes } from '../../context/portfolioContext'\r\nimport { TDispatch } from '../../context/authContext'\r\nimport { IPortfolioItem } from '../../interfaces/interfaces'\r\n\r\nconst css = require('./Home.module.css')\r\n\r\nconst Home: NextPage = (): JSX.Element => {\r\n    const [bgLoaded, setBgLoaded] = React.useState<boolean>(false)\r\n    const [loading, setLoading] = React.useState<boolean>(true)\r\n    const [ready, setReady] = React.useState<boolean>(false)\r\n\r\n    React.useEffect(() => {\r\n        if (bgLoaded && !loading) setReady(true) \r\n    }, [bgLoaded, loading])\r\n\r\n    React.useEffect(() => {\r\n        // check if bg image is already cached\r\n        // if yes, set as loaded\r\n        const image = new Image()\r\n        image.src = '/images/palm.png'\r\n        if (image.complete) setBgLoaded(true)\r\n    }, [])\r\n\r\n    const portfolioContext: IPortfolioContext = React.useContext(PortfolioContext)\r\n    const portfolioState: TPortfolioState = portfolioContext.state\r\n    const portfolioDispatch: TDispatch = portfolioContext.dispatch!\r\n\r\n    React.useEffect(() => {\r\n        if (portfolioState.items.length === 0) {\r\n            portfolioDispatch({ type: TPortfolioActionTypes.FETCH_ITEMS })\r\n         } else {\r\n            setLoading(false)\r\n         }\r\n    }, [portfolioState.items])\r\n\r\n    return (\r\n        <>\r\n            <Loading show={!ready} />\r\n            <Layout>\r\n                <Cover show={ready} load={() => setBgLoaded(true)} />\r\n                { bgLoaded  && !loading && <Content /> }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface ILoadingComponent {\r\n    show: boolean\r\n}\r\n\r\nconst Loading: React.FunctionComponent<ILoadingComponent> = ({ show }): JSX.Element => {\r\n    const styles = [\r\n        css.Loading,\r\n        !show && css.out\r\n    ].join(' ')\r\n\r\n    return (\r\n        <div className={styles}>\r\n            <CubeSpinner />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}