{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\n\nvar css = require('./Portfolio.module.css');\n\nimport AddPortfolioItem from '../AddNewItem/AddItem';\nimport { AuthContext } from '../../../context/authContext';\nimport { PortfolioContext, TPortfolioActionTypes } from '../../../context/portfolioContext';\nimport PortfolioItem from './Item/Item';\nimport Loading from '../../UI/Loading/Loading';\n\nvar PortfolioItems = function PortfolioItems(_ref) {\n  var items = _ref.items;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      sending = _React$useState2[0],\n      setSsending = _React$useState2[1];\n\n  var authContext = React.useContext(AuthContext);\n  var portfolioContext = React.useContext(PortfolioContext);\n\n  var deleteItem = function deleteItem(itemTitle) {\n    if (authContext.state.signedIn) {\n      setSsending(true);\n      var baseURL = \"https://joonajo-portfolio.firebaseio.com/items/\";\n      var itemParam = \"\".concat(itemTitle, \".json\");\n      var tokenParam = \"?auth=\".concat(authContext.state.idToken);\n      fetch(baseURL + itemParam + tokenParam, {\n        method: 'delete'\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log('succesfully deleted', itemTitle);\n        setSsending(false);\n        portfolioContext.dispatch({\n          type: TPortfolioActionTypes.DELETE_ITEM,\n          payload: itemTitle\n        });\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: css.ItemsContainer\n  }, items && items.map(function (item) {\n    return __jsx(PortfolioItem, {\n      key: item.title,\n      item: item,\n      deleteItem: deleteItem\n    });\n  }), __jsx(AddPortfolioItem, null)), __jsx(Loading, {\n    show: sending,\n    transparent: true,\n    fadeout: true\n  }));\n};\n\nexport default PortfolioItems;","map":null,"metadata":{},"sourceType":"module"}