{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { icons } from '../../icons/icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport ExpandedVideo from '../ExpandedVideo/ExpandedVideo';\n\nconst css = require('./Item.module.css');\n\nconst SHOW_TRESHOLD = 100; // pixels\n\nconst Item = props => {\n  const [showItem, toggleShowItem] = React.useState(false);\n  const [showVideo, toggleShowVideo] = React.useState(false);\n  const itemRef = React.useRef(null); // update the event listeners every time the showItem state is changed\n\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true);\n    return () => window.removeEventListener('scroll', checkIfInViewport, true);\n  }, [showItem]);\n\n  const checkIfInViewport = () => {\n    if (itemRef && itemRef.current) {\n      const itemPos = itemRef.current.getBoundingClientRect().top;\n      const windowHeight = window.innerHeight;\n      const newShowItem = itemPos < windowHeight - SHOW_TRESHOLD;\n      if (newShowItem !== showItem) toggleShowItem(newShowItem);\n    }\n  };\n\n  const itemClasses = [css.Item, showItem && css.show].join(' ');\n  return __jsx(\"div\", {\n    className: itemClasses,\n    ref: itemRef\n  }, __jsx(\"p\", {\n    className: css.Title\n  }, __jsx(\"span\", null, props.title)), __jsx(\"div\", {\n    className: css.ItemContent\n  }, __jsx(ItemPreview, {\n    video_src: props.video_src,\n    preview_src: props.preview_src,\n    gif_src: props.gif_src,\n    link: props.link,\n    githubLink: props.githubLink,\n    toggle: toggleShowVideo\n  }), __jsx(ItemInfo, {\n    languages: props.language,\n    title: props.title,\n    desc: props.description,\n    desktop: props.desktop,\n    mobile: props.mobile,\n    link: props.link,\n    githubLink: props.githubLink\n  })), showVideo && __jsx(ExpandedVideo, {\n    video_src: props.video_src,\n    close: () => toggleShowVideo(false)\n  }));\n};\n\nconst ItemInfo = props => {\n  return __jsx(\"div\", {\n    className: css.InfoContainer\n  }, __jsx(\"div\", {\n    className: css.MadeWith\n  }, \"made with\", props.languages.map((lang, index) => __jsx(\"p\", {\n    key: lang,\n    className: css.Language\n  }, lang, index !== props.languages.length - 1 ? __jsx(\"span\", {\n    style: {\n      color: 'dimgray'\n    }\n  }, \" + \") : ''))), __jsx(\"p\", {\n    className: css.Description\n  }, props.desc), __jsx(\"div\", {\n    className: css.IconsAndLinks\n  }, __jsx(\"div\", {\n    className: css.ItemLinks\n  }, __jsx(\"a\", {\n    className: css.ItemLinkContainer,\n    href: props.githubLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(\"p\", {\n    className: css.ItemLink\n  }, \"Github\"), __jsx(\"div\", {\n    className: css.ItemLinkIcon\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faGithub\n  }))), __jsx(\"a\", {\n    className: css.ItemLinkContainer,\n    href: props.link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(\"p\", {\n    className: css.ItemLink\n  }, \"Open\"), __jsx(\"div\", {\n    className: css.ItemLinkIcon\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faExternalLinkSquareAlt\n  })))), __jsx(HardwareIcons, {\n    desktop: props.desktop,\n    mobile: props.mobile\n  })));\n};\n\nconst HardwareIcons = ({\n  desktop,\n  mobile\n}) => __jsx(\"div\", {\n  className: css.HardwareIcons\n}, __jsx(\"div\", {\n  className: css.HardwareIconContainer\n}, __jsx(\"div\", {\n  className: [css.HardwareIcon, css.DesktopIcon].join(' ')\n}, __jsx(FontAwesomeIcon, {\n  icon: icons.faDesktop\n})), desktop ? __jsx(CheckMarkIcon, null) : __jsx(TimesIcon, null)), __jsx(\"div\", {\n  className: css.HardwareIconContainer\n}, __jsx(\"div\", {\n  className: [css.HardwareIcon, css.MobileIcon].join(' ')\n}, __jsx(FontAwesomeIcon, {\n  icon: icons.faMobileAlt\n})), mobile ? __jsx(CheckMarkIcon, null) : __jsx(TimesIcon, null)));\n\nconst CheckMarkIcon = () => __jsx(\"div\", {\n  className: [css.HardwareIcon, css.CheckMarkIcon].join(' ')\n}, __jsx(FontAwesomeIcon, {\n  icon: icons.faCheck,\n  color: \"green\"\n}));\n\nconst TimesIcon = () => __jsx(\"div\", {\n  className: [css.HardwareIcon, css.TimesIcon].join(' ')\n}, __jsx(FontAwesomeIcon, {\n  icon: icons.faTimes,\n  color: \"crimson\"\n}));\n\nconst ItemPreview = props => {\n  return __jsx(\"div\", {\n    className: css.PreviewContainer\n  }, __jsx(\"video\", {\n    className: css.PreviewVideo,\n    poster: props.gif_src,\n    muted: true,\n    autoPlay: true,\n    playsInline: true,\n    loop: true\n  }, __jsx(\"source\", {\n    src: props.preview_src,\n    type: \"video/mp4\"\n  })), __jsx(\"div\", {\n    className: css.PreviewMask\n  }, __jsx(\"div\", {\n    className: css.MaskLinks\n  }, __jsx(ExpandVideo, {\n    toggle: props.toggle\n  }))));\n};\n\nconst ExpandVideo = ({\n  toggle\n}) => {\n  const classes = [css.ExpandVideo].join(' ');\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classes,\n    onClick: () => toggle(true)\n  }, __jsx(\"p\", null, \"Expand Video\"), __jsx(FontAwesomeIcon, {\n    icon: icons.faExpand,\n    color: \"white\"\n  })));\n};\n\nconst MaskLink = ({\n  address,\n  text\n}) => {\n  return __jsx(\"a\", {\n    href: address,\n    className: css.MaskLink,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(\"div\", {\n    className: css.MaskLinkText\n  }, __jsx(\"span\", null, text)));\n};\n\nexport default Item;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Item/Item.tsx"],"names":["React","icons","FontAwesomeIcon","ExpandedVideo","css","require","SHOW_TRESHOLD","Item","props","showItem","toggleShowItem","useState","showVideo","toggleShowVideo","itemRef","useRef","useEffect","window","addEventListener","checkIfInViewport","removeEventListener","current","itemPos","getBoundingClientRect","top","windowHeight","innerHeight","newShowItem","itemClasses","show","join","Title","title","ItemContent","video_src","preview_src","gif_src","link","githubLink","language","description","desktop","mobile","ItemInfo","InfoContainer","MadeWith","languages","map","lang","index","Language","length","color","Description","desc","IconsAndLinks","ItemLinks","ItemLinkContainer","ItemLink","ItemLinkIcon","faGithub","faExternalLinkSquareAlt","HardwareIcons","HardwareIconContainer","HardwareIcon","DesktopIcon","faDesktop","MobileIcon","faMobileAlt","CheckMarkIcon","faCheck","TimesIcon","faTimes","ItemPreview","PreviewContainer","PreviewVideo","PreviewMask","MaskLinks","toggle","ExpandVideo","classes","faExpand","MaskLink","address","text","MaskLinkText"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IPortfolioItem } from '../../interfaces/interfaces'\nimport { icons } from '../../icons/icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ExpandedVideo from '../ExpandedVideo/ExpandedVideo'\n\nconst css = require('./Item.module.css')\n\nconst SHOW_TRESHOLD = 100 // pixels\n\nconst Item: React.FunctionComponent<IPortfolioItem> = (props): JSX.Element => {\n  const[showItem, toggleShowItem] = React.useState<boolean>(false)\n  const[showVideo, toggleShowVideo] = React.useState<boolean>(false)\n  const itemRef: React.RefObject<HTMLDivElement> = React.useRef<HTMLDivElement>(null)\n  \n  // update the event listeners every time the showItem state is changed\n  React.useEffect(() => {\n    window.addEventListener('scroll', checkIfInViewport, true)\n  \n    return () => window.removeEventListener('scroll', checkIfInViewport, true)  \n  }, [showItem])\n  \n  const checkIfInViewport = () => {\n    if (itemRef && itemRef.current) {\n      const itemPos: number = itemRef.current.getBoundingClientRect().top\n      const windowHeight: number = window.innerHeight\n  \n      const newShowItem: boolean = itemPos < (windowHeight - SHOW_TRESHOLD)\n      if (newShowItem !== showItem) toggleShowItem(newShowItem)\n    }\n  }\n\n  const itemClasses = [\n    css.Item, \n    showItem && css.show\n  ].join(' ')\n  \n  return (\n    <div className={itemClasses} ref={itemRef} >\n      <p className={css.Title}><span>{props.title}</span></p>\n      <div className={css.ItemContent}>\n        <ItemPreview video_src={props.video_src}\n          preview_src={props.preview_src}\n          gif_src={props.gif_src} \n          link={props.link} \n          githubLink={props.githubLink}\n          toggle={toggleShowVideo} />\n        <ItemInfo languages={props.language}\n          title={props.title}\n          desc={props.description}\n          desktop={props.desktop}\n          mobile={props.mobile}\n          link={props.link}\n          githubLink={props.githubLink} />\n      </div>\n      {showVideo && <ExpandedVideo video_src={props.video_src} close={() => toggleShowVideo(false)} />}\n    </div>\n  )\n}\n\ninterface IItemInfo {\n  languages: string[]\n  title: string\n  desc: string\n  desktop: boolean\n  mobile: boolean\n  link: string\n  githubLink: string\n}\n\nconst ItemInfo: React.FunctionComponent<IItemInfo> = (props): JSX.Element => {\n  return (\n    <div className={css.InfoContainer}>\n      <div className={css.MadeWith}>\n        made with\n        {props.languages.map((lang: string, index: number) => (\n          <p key={lang} className={css.Language}>\n            {lang}\n            {index !== props.languages.length - 1 ? <span style={{color: 'dimgray'}}> + </span> : ''}\n          </p>\n        ))}\n      </div>\n      <p className={css.Description}>\n        {props.desc}\n      </p>\n      <div className={css.IconsAndLinks}>\n        <div className={css.ItemLinks}>\n          <a className={css.ItemLinkContainer} href={props.githubLink} target=\"_blank\" rel=\"noopener noreferrer\">\n            <p className={css.ItemLink}>Github</p>\n            <div className={css.ItemLinkIcon}>\n              <FontAwesomeIcon icon={icons.faGithub} />\n            </div>\n          </a>\n          <a className={css.ItemLinkContainer} href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n            <p className={css.ItemLink}>Open</p>\n            <div className={css.ItemLinkIcon}>\n              <FontAwesomeIcon icon={icons.faExternalLinkSquareAlt} />\n            </div>\n          </a>\n        </div>\n        <HardwareIcons desktop={props.desktop} mobile={props.mobile} />\n      </div>\n    </div>\n  )\n}\n\ninterface IHardwareICons {\n  desktop: boolean\n  mobile: boolean\n}\n\nconst HardwareIcons: React.FunctionComponent<IHardwareICons> = ({ desktop, mobile }): JSX.Element => (\n  <div className={css.HardwareIcons}>\n    <div className={css.HardwareIconContainer}>\n      <div className={[css.HardwareIcon, css.DesktopIcon].join(' ')}>\n        <FontAwesomeIcon icon={icons.faDesktop} />\n      </div>\n      {desktop ?\n        <CheckMarkIcon /> : <TimesIcon />\n      }\n    </div>\n    <div className={css.HardwareIconContainer}>\n      <div className={[css.HardwareIcon, css.MobileIcon].join(' ')}>\n        <FontAwesomeIcon icon={icons.faMobileAlt} />\n      </div>\n      {mobile ? \n        <CheckMarkIcon /> : <TimesIcon />\n      }\n    </div>\n  </div>\n)\n\nconst CheckMarkIcon: React.FunctionComponent = (): JSX.Element => (\n  <div className={[css.HardwareIcon, css.CheckMarkIcon].join(' ')}>\n    <FontAwesomeIcon icon={icons.faCheck} color=\"green\" />\n  </div>\n)\n\nconst TimesIcon: React.FunctionComponent = (): JSX.Element => (\n  <div className={[css.HardwareIcon, css.TimesIcon].join(' ')}>\n    <FontAwesomeIcon icon={icons.faTimes} color=\"crimson\" />\n  </div>\n)\n\ninterface IPreview {\n  video_src: string\n  preview_src?: string\n  gif_src: string\n  link: string\n  githubLink: string\n  toggle: (newValue: boolean) => void\n}\n\nconst ItemPreview: React.FunctionComponent<IPreview> = (props): JSX.Element => {\n  return (\n    <div className={css.PreviewContainer}>\n      <video className={css.PreviewVideo} poster={props.gif_src} muted autoPlay playsInline loop >\n        <source src={props.preview_src} type=\"video/mp4\" />\n      </video>\n      <div className={css.PreviewMask}>\n        <div className={css.MaskLinks}>\n          {/* <MaskLink address={props.link} text=\"Open\" icon={\"link\"} />\n          <MaskLink address={props.githubLink} text=\"Github\" icon={\"github\"} /> */}\n          <ExpandVideo toggle={props.toggle}  />\n        </div>\n      </div>\n    </div>\n  )\n}\n\ninterface IExpandVideo {\n  toggle: (newValue: boolean) => void\n}\n\nconst ExpandVideo: React.FunctionComponent<IExpandVideo> = ({ toggle }): JSX.Element => {\n \n  const classes = [\n    css.ExpandVideo\n  ].join(' ')\n\n  return (\n    <>\n      <div className={classes} onClick={() => toggle(true)}>\n        <p>Expand Video</p>\n        <FontAwesomeIcon icon={icons.faExpand} color='white' />\n      </div>\n    </>\n  )\n}\n\ninterface IMaskLink {\n  address: string\n  text: string\n  icon: string\n}\n\nconst MaskLink: React.FunctionComponent<IMaskLink> = ({ address, text }): JSX.Element => {\n  return (\n      <a href={address} className={css.MaskLink} target='_blank' rel=\"noopener noreferrer\">\n          <div className={css.MaskLinkText}>\n              <span>{text}</span>\n          </div>\n      </a>\n  )\n}\n\nexport default Item"]},"metadata":{},"sourceType":"module"}