{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Cover from '../../components/Cover/Cover';\nimport Content from '../../components/Content/Content';\nimport { PortfolioContext, TPortfolioActionTypes } from '../../context/portfolioContext';\nimport Layout from '../../components/UI/Layout/Layout';\nimport Loading from '../../components/UI/Loading/Loading';\n\nconst css = require('./Home.module.css');\n\nconst Home = () => {\n  const [bgLoaded, setBgLoaded] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [ready, setReady] = React.useState(false);\n  React.useEffect(() => {\n    if (bgLoaded && !loading) setReady(true);\n  }, [bgLoaded, loading]);\n  React.useEffect(() => {\n    // check if bg image is already cached\n    // if yes, set as loaded\n    const image = new Image();\n    image.src = '/images/palm.png';\n    if (image.complete) setBgLoaded(true);\n  }, []);\n  const portfolioContext = React.useContext(PortfolioContext);\n  const portfolioState = portfolioContext.state;\n  const portfolioDispatch = portfolioContext.dispatch;\n  React.useEffect(() => {\n    if (portfolioState && portfolioDispatch) {\n      if (portfolioState.items.length === 0) {\n        const baseURL = 'https://joonajo-portfolio.firebaseio.com/items.json';\n        const newItems = [];\n        fetch(baseURL, {\n          method: 'get'\n        }).then(response => response.json()).then(data => {\n          if (data) {\n            _Object$keys(data).forEach(item => {\n              newItems.push(data[item]);\n            });\n\n            portfolioDispatch({\n              type: TPortfolioActionTypes.SET_ITEMS,\n              payload: newItems\n            });\n          }\n\n          setLoading(false);\n        });\n      }\n    }\n  }, [portfolioState]);\n  return __jsx(React.Fragment, null, __jsx(Loading, {\n    show: !ready,\n    slideout: true,\n    fullscreen: true\n  }), __jsx(Layout, null, __jsx(Cover, {\n    show: ready,\n    load: () => setBgLoaded(true)\n  }), bgLoaded && !loading && __jsx(Content, null)));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/containers/Home/Home.tsx"],"names":["React","Cover","Content","PortfolioContext","TPortfolioActionTypes","Layout","Loading","css","require","Home","bgLoaded","setBgLoaded","useState","loading","setLoading","ready","setReady","useEffect","image","Image","src","complete","portfolioContext","useContext","portfolioState","state","portfolioDispatch","dispatch","items","length","baseURL","newItems","fetch","method","then","response","json","data","forEach","item","push","type","SET_ITEMS","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAA4BC,gBAA5B,EAA+DC,qBAA/D,QAA4F,gCAA5F;AAGA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,mBAAD,CAAnB;;AAEA,MAAMC,IAAc,GAAG,MAAmB;AACtC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACY,QAAN,CAAwB,KAAxB,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACY,QAAN,CAAwB,IAAxB,CAA9B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACY,QAAN,CAAwB,KAAxB,CAA1B;AAEAZ,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClB,QAAIP,QAAQ,IAAI,CAACG,OAAjB,EAA0BG,QAAQ,CAAC,IAAD,CAAR;AAC7B,GAFD,EAEG,CAACN,QAAD,EAAWG,OAAX,CAFH;AAIAb,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClB;AACA;AACA,UAAMC,KAAK,GAAG,IAAIC,KAAJ,EAAd;AACAD,IAAAA,KAAK,CAACE,GAAN,GAAY,kBAAZ;AACA,QAAIF,KAAK,CAACG,QAAV,EAAoBV,WAAW,CAAC,IAAD,CAAX;AACvB,GAND,EAMG,EANH;AAQA,QAAMW,gBAAmC,GAAGtB,KAAK,CAACuB,UAAN,CAAiBpB,gBAAjB,CAA5C;AACA,QAAMqB,cAA+B,GAAGF,gBAAgB,CAACG,KAAzD;AACA,QAAMC,iBAA4B,GAAGJ,gBAAgB,CAACK,QAAtD;AAEA3B,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClB,QAAIO,cAAc,IAAIE,iBAAtB,EAAyC;AACrC,UAAIF,cAAc,CAACI,KAAf,CAAqBC,MAArB,KAAgC,CAApC,EAAuC;AACnC,cAAMC,OAAe,GAAG,qDAAxB;AAEA,cAAMC,QAA0B,GAAG,EAAnC;AAEAC,QAAAA,KAAK,CAACF,OAAD,EAAU;AAAEG,UAAAA,MAAM,EAAE;AAAV,SAAV,CAAL,CAAkCC,IAAlC,CAAuCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAnD,EACKF,IADL,CACUG,IAAI,IAAI;AACV,cAAIA,IAAJ,EAAU;AACN,yBAAYA,IAAZ,EAAkBC,OAAlB,CAA0BC,IAAI,IAAI;AAC9BR,cAAAA,QAAQ,CAACS,IAAT,CAAcH,IAAI,CAACE,IAAD,CAAlB;AACH,aAFD;;AAGAb,YAAAA,iBAAiB,CAAC;AAAEe,cAAAA,IAAI,EAAErC,qBAAqB,CAACsC,SAA9B;AAAyCC,cAAAA,OAAO,EAAEZ;AAAlD,aAAD,CAAjB;AACH;;AACDjB,UAAAA,UAAU,CAAC,KAAD,CAAV;AACH,SATL;AAUH;AACJ;AACJ,GAnBD,EAmBG,CAACU,cAAD,CAnBH;AAqBA,SACI,4BACI,MAAC,OAAD;AAAS,IAAA,IAAI,EAAE,CAACT,KAAhB;AAAuB,IAAA,QAAQ,MAA/B;AAAgC,IAAA,UAAU;AAA1C,IADJ,EAEI,MAAC,MAAD,QACI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAEA,KAAb;AAAoB,IAAA,IAAI,EAAE,MAAMJ,WAAW,CAAC,IAAD;AAA3C,IADJ,EAEMD,QAAQ,IAAK,CAACG,OAAd,IAAyB,MAAC,OAAD,OAF/B,CAFJ,CADJ;AASH,CAnDD;;AAqDA,eAAeJ,IAAf","sourcesContent":["import React from 'react'\r\n\r\nimport {Â NextPage } from 'next'\r\nimport Cover from '../../components/Cover/Cover'\r\nimport Content from '../../components/Content/Content'\r\nimport { IPortfolioContext, PortfolioContext, TPortfolioState, TPortfolioActionTypes } from '../../context/portfolioContext'\r\nimport { TDispatch } from '../../context/authContext'\r\nimport { IPortfolioItem } from '../../interfaces/interfaces'\r\nimport Layout from '../../components/UI/Layout/Layout'\r\nimport Loading from '../../components/UI/Loading/Loading'\r\n\r\nconst css = require('./Home.module.css')\r\n\r\nconst Home: NextPage = (): JSX.Element => {\r\n    const [bgLoaded, setBgLoaded] = React.useState<boolean>(false)\r\n    const [loading, setLoading] = React.useState<boolean>(true)\r\n    const [ready, setReady] = React.useState<boolean>(false)\r\n\r\n    React.useEffect(() => {\r\n        if (bgLoaded && !loading) setReady(true) \r\n    }, [bgLoaded, loading])\r\n\r\n    React.useEffect(() => {\r\n        // check if bg image is already cached\r\n        // if yes, set as loaded\r\n        const image = new Image()\r\n        image.src = '/images/palm.png'\r\n        if (image.complete) setBgLoaded(true)\r\n    }, [])\r\n\r\n    const portfolioContext: IPortfolioContext = React.useContext(PortfolioContext)\r\n    const portfolioState: TPortfolioState = portfolioContext.state\r\n    const portfolioDispatch: TDispatch = portfolioContext.dispatch!\r\n\r\n    React.useEffect(() => {\r\n        if (portfolioState && portfolioDispatch) {\r\n            if (portfolioState.items.length === 0) {\r\n                const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items.json'\r\n\r\n                const newItems: IPortfolioItem[] = []\r\n                \r\n                fetch(baseURL, { method: 'get' }).then(response => response.json())\r\n                    .then(data => {\r\n                        if (data) {\r\n                            Object.keys(data).forEach(item => {\r\n                                newItems.push(data[item])\r\n                            })\r\n                            portfolioDispatch({ type: TPortfolioActionTypes.SET_ITEMS, payload: newItems })\r\n                        }\r\n                        setLoading(false)\r\n                    })\r\n            }\r\n        }\r\n    }, [portfolioState])\r\n\r\n    return (\r\n        <>\r\n            <Loading show={!ready} slideout fullscreen />\r\n            <Layout>\r\n                <Cover show={ready} load={() => setBgLoaded(true)} />\r\n                { bgLoaded  && !loading && <Content /> }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home"]},"metadata":{},"sourceType":"module"}