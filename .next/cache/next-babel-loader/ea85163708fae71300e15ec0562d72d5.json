{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nexport const initialAuthState = {\n  signedIn: false\n};\n\nconst signIn = (state, action) => {\n  var _action$payload, _action$payload2, _action$payload3;\n\n  if (action.type !== 'signin') return _objectSpread({}, state);\n\n  const updatedState = _objectSpread({}, state, {\n    signedIn: true,\n    email: (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.email,\n    password: (_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.password,\n    idToken: (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.idToken\n  });\n\n  return _objectSpread({}, updatedState);\n};\n\nconst authReducer = (state = initialAuthState, action) => {\n  switch (action.type) {\n    case 'signin':\n      return signIn(state, action);\n\n    case 'signout':\n      return {\n        signedIn: false\n      };\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport const AuthContext = React.createContext({\n  state: initialAuthState\n});\nexport const AuthProvider = ({\n  children\n}) => {\n  const [state, dispatch] = React.useReducer(authReducer, initialAuthState);\n  return __jsx(AuthContext.Provider, {\n    value: {\n      state,\n      dispatch\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/context/authContext.tsx"],"names":["React","initialAuthState","signedIn","signIn","state","action","type","updatedState","email","payload","password","idToken","authReducer","AuthContext","createContext","AuthProvider","children","dispatch","useReducer"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAeA,OAAO,MAAMC,gBAA4B,GAAG;AACxCC,EAAAA,QAAQ,EAAE;AAD8B,CAArC;;AAIP,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAoBC,MAApB,KAAyD;AAAA;;AACpE,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B,yBAAYF,KAAZ;;AAE9B,QAAMG,YAAwB,qBACvBH,KADuB;AAE1BF,IAAAA,QAAQ,EAAE,IAFgB;AAG1BM,IAAAA,KAAK,qBAAEH,MAAM,CAACI,OAAT,oDAAE,gBAAgBD,KAHG;AAI1BE,IAAAA,QAAQ,sBAAEL,MAAM,CAACI,OAAT,qDAAE,iBAAgBC,QAJA;AAK1BC,IAAAA,OAAO,sBAAEN,MAAM,CAACI,OAAT,qDAAE,iBAAgBE;AALC,IAA9B;;AAQA,2BACOJ,YADP;AAGH,CAdD;;AAgBA,MAAMK,WAAW,GAAG,CAACR,KAAiB,GAAGH,gBAArB,EAAuCI,MAAvC,KAA4E;AAC5F,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAOH,MAAM,CAACC,KAAD,EAAQC,MAAR,CAAb;;AAEJ,SAAK,SAAL;AACI,aAAO;AACHH,QAAAA,QAAQ,EAAE;AADP,OAAP;;AAIJ;AACI,+BAAYE,KAAZ;AAVR;AAYH,CAbD;;AAoBA,OAAO,MAAMS,WAAW,GAAGb,KAAK,CAACc,aAAN,CAAkC;AAAEV,EAAAA,KAAK,EAAEH;AAAT,CAAlC,CAApB;AAMP,OAAO,MAAMc,YAAoD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAClF,QAAK,CAACZ,KAAD,EAAQa,QAAR,IAAoBjB,KAAK,CAACkB,UAAN,CAAiBN,WAAjB,EAA8BX,gBAA9B,CAAzB;AAGA,SACI,MAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAD;AAAQa,MAAAA;AAAR;AAA7B,KACKD,QADL,CADJ;AAKH,CATM","sourcesContent":["import React from 'react'\r\n\r\nexport type TDispatch = React.Dispatch<React.SetStateAction<any>>\r\n\r\nexport type TAuthState = {\r\n    signedIn: boolean\r\n    email?: string\r\n    password?: string\r\n    idToken?: string\r\n}\r\n\r\nexport type TAuthActions = \r\n| ({ type: 'signin', payload: { email: string, password: string, idToken: string } })\r\n| ({ type: 'signout' })\r\n\r\nexport const initialAuthState: TAuthState = {\r\n    signedIn: false\r\n}\r\n\r\nconst signIn = (state: TAuthState, action: TAuthActions): TAuthState => {\r\n    if (action.type !== 'signin') return { ...state }\r\n    \r\n    const updatedState: TAuthState = {\r\n        ...state,\r\n        signedIn: true,\r\n        email: action.payload?.email,\r\n        password: action.payload?.password,\r\n        idToken: action.payload?.idToken,\r\n    }\r\n\r\n    return {\r\n        ...updatedState\r\n    }\r\n}\r\n\r\nconst authReducer = (state: TAuthState = initialAuthState, action: TAuthActions): TAuthState => {\r\n    switch (action.type) {\r\n        case 'signin':\r\n            return signIn(state, action)\r\n\r\n        case 'signout':\r\n            return {\r\n                signedIn: false\r\n            }\r\n    \r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport interface IAuthContext {\r\n    state: TAuthState,\r\n    dispatch?: TDispatch\r\n}\r\n\r\nexport const AuthContext = React.createContext<IAuthContext>({ state: initialAuthState })\r\n\r\ninterface IAuthProvider {\r\n    children: any\r\n}\r\n\r\nexport const AuthProvider: React.FunctionComponent<IAuthProvider> = ({ children }) => {\r\n    const[state, dispatch] = React.useReducer(authReducer, initialAuthState)\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}