{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { formTypes } from '../../../form/form';\nimport ItemForm from '../ItemForm/ItemForm';\nimport { AuthContext } from '../../../context/authContext';\nimport { PortfolioContext, TPortfolioActionTypes } from '../../../context/portfolioContext';\n\nconst css = require('./EditItem.module.css');\n\nconst EditItem = ({\n  show,\n  item,\n  close\n}) => {\n  const [sending, setSending] = React.useState(false);\n  const authContext = React.useContext(AuthContext);\n  const portfolioContext = React.useContext(PortfolioContext);\n\n  const editItem = item => {\n    if (authContext.state.signedIn) {\n      setSending(true);\n      const baseURL = 'https://joonajo-portfolio.firebaseio.com/items/';\n      const title = item.title + \".json\";\n      const tokenParam = `?auth=${authContext.state.idToken}`;\n      fetch(baseURL + title + tokenParam, {\n        method: 'put',\n        body: _JSON$stringify(item)\n      }).then(response => response.json().then(data => {\n        console.log(data);\n        setSending(false);\n        portfolioContext.dispatch({\n          type: TPortfolioActionTypes.EDIT_ITEM,\n          payload: item\n        });\n      }));\n      close();\n    }\n  };\n\n  const containerStyles = [css.EditItemContainer, show && css.show].join(' ');\n  return __jsx(\"div\", {\n    className: containerStyles\n  }, __jsx(ItemForm, {\n    type: formTypes.EDIT,\n    show: show,\n    sending: sending,\n    item: item,\n    close: close,\n    add: editItem\n  }));\n};\n\nexport default EditItem;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Admin/EditItem/EditItem.tsx"],"names":["React","formTypes","ItemForm","AuthContext","PortfolioContext","TPortfolioActionTypes","css","require","EditItem","show","item","close","sending","setSending","useState","authContext","useContext","portfolioContext","editItem","state","signedIn","baseURL","title","tokenParam","idToken","fetch","method","body","then","response","json","data","console","log","dispatch","type","EDIT_ITEM","payload","containerStyles","EditItemContainer","join","EDIT"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,SAAuBC,WAAvB,QAA0C,8BAA1C;AACA,SAA4BC,gBAA5B,EAA8CC,qBAA9C,QAA2E,mCAA3E;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,uBAAD,CAAnB;;AAQA,MAAMC,QAA4C,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAD,KAAwC;AACzF,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,KAAK,CAACc,QAAN,CAAwB,KAAxB,CAA9B;AACA,QAAMC,WAAyB,GAAGf,KAAK,CAACgB,UAAN,CAAiBb,WAAjB,CAAlC;AACA,QAAMc,gBAAmC,GAAGjB,KAAK,CAACgB,UAAN,CAAiBZ,gBAAjB,CAA5C;;AAEA,QAAMc,QAAQ,GAAIR,IAAD,IAA0B;AACvC,QAAIK,WAAW,CAACI,KAAZ,CAAkBC,QAAtB,EAAgC;AAC5BP,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMQ,OAAe,GAAG,iDAAxB;AACA,YAAMC,KAAa,GAAGZ,IAAI,CAACY,KAAL,GAAa,OAAnC;AACA,YAAMC,UAAkB,GAAI,SAAQR,WAAW,CAACI,KAAZ,CAAkBK,OAAQ,EAA9D;AAEAC,MAAAA,KAAK,CAACJ,OAAO,GAAGC,KAAV,GAAkBC,UAAnB,EAA+B;AAAEG,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,IAAI,EAAE,gBAAejB,IAAf;AAAvB,OAA/B,CAAL,CAAmFkB,IAAnF,CAAwFC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,GAC/FF,IAD+F,CAC1FG,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAlB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,QAAAA,gBAAgB,CAACiB,QAAjB,CAA2B;AAAEC,UAAAA,IAAI,EAAE9B,qBAAqB,CAAC+B,SAA9B;AAAyCC,UAAAA,OAAO,EAAE3B;AAAlD,SAA3B;AACH,OAL+F,CAApG;AAMAC,MAAAA,KAAK;AACR;AACJ,GAfD;;AAiBA,QAAM2B,eAAe,GAAG,CACpBhC,GAAG,CAACiC,iBADgB,EAEpB9B,IAAI,IAAIH,GAAG,CAACG,IAFQ,EAGtB+B,IAHsB,CAGjB,GAHiB,CAAxB;AAKA,SACI;AAAK,IAAA,SAAS,EAAEF;AAAhB,KACI,MAAC,QAAD;AAAU,IAAA,IAAI,EAAErC,SAAS,CAACwC,IAA1B;AAAgC,IAAA,IAAI,EAAEhC,IAAtC;AAA4C,IAAA,OAAO,EAAEG,OAArD;AAA8D,IAAA,IAAI,EAAEF,IAApE;AAA0E,IAAA,KAAK,EAAEC,KAAjF;AAAwF,IAAA,GAAG,EAAEO;AAA7F,IADJ,CADJ;AAKH,CAhCD;;AAkCA,eAAeV,QAAf","sourcesContent":["import * as React from 'react'\r\n\r\nimport { formTypes } from '../../../form/form'\r\nimport ItemForm from '../ItemForm/ItemForm'\r\nimport { IPortfolioItem } from '../../../interfaces/interfaces'\r\nimport { IAuthContext, AuthContext } from '../../../context/authContext'\r\nimport { IPortfolioContext, PortfolioContext, TPortfolioActionTypes } from '../../../context/portfolioContext'\r\n\r\nconst css = require('./EditItem.module.css')\r\n\r\ninterface IEditItem {\r\n    show: boolean\r\n    item: IPortfolioItem\r\n    close(): void\r\n}\r\n\r\nconst EditItem: React.FunctionComponent<IEditItem> = ({ show, item, close }): JSX.Element => {\r\n    const [sending, setSending] = React.useState<boolean>(false)\r\n    const authContext: IAuthContext = React.useContext(AuthContext)\r\n    const portfolioContext: IPortfolioContext = React.useContext(PortfolioContext)\r\n\r\n    const editItem = (item: IPortfolioItem) => {\r\n        if (authContext.state.signedIn) {\r\n            setSending(true)\r\n            const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items/'\r\n            const title: string = item.title + \".json\"\r\n            const tokenParam: string = `?auth=${authContext.state.idToken}`\r\n    \r\n            fetch(baseURL + title + tokenParam, { method: 'put', body: JSON.stringify(item) }).then(response => response.json()\r\n                .then(data => {\r\n                    console.log(data)\r\n                    setSending(false)\r\n                    portfolioContext.dispatch!({ type: TPortfolioActionTypes.EDIT_ITEM, payload: item })\r\n                }))\r\n            close()\r\n        }\r\n    }\r\n\r\n    const containerStyles = [\r\n        css.EditItemContainer,\r\n        show && css.show\r\n    ].join(' ')\r\n\r\n    return (\r\n        <div className={containerStyles}>\r\n            <ItemForm type={formTypes.EDIT} show={show} sending={sending} item={item} close={close} add={editItem} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditItem"]},"metadata":{},"sourceType":"module"}