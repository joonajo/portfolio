{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\n\nconst css = require('./Portfolio.module.css');\n\nimport AddPortfolioItem from '../AddNewItem/AddItem';\nimport { AuthContext } from '../../../context/authContext';\nimport { PortfolioContext, TPortfolioActionTypes } from '../../../context/portfolioContext';\nimport PortfolioItem from './Item/Item';\nimport Loading from '../../UI/Loading/Loading';\n\nconst PortfolioItems = ({\n  items\n}) => {\n  const [sending, setSending] = React.useState(false);\n  const authContext = React.useContext(AuthContext);\n  const portfolioContext = React.useContext(PortfolioContext);\n\n  const addItemToDatabase = item => {\n    if (authContext.state.signedIn) {\n      setSending(true);\n      const baseURL = 'https://joonajo-portfolio.firebaseio.com/items/';\n      const title = item.title + \".json\";\n      const tokenParam = `?auth=${authContext.state.idToken}`;\n      fetch(baseURL + title + tokenParam, {\n        method: 'put',\n        body: _JSON$stringify(item)\n      }).then(response => response.json().then(data => {\n        setSending(false);\n      }));\n    }\n  };\n\n  const deleteItem = itemTitle => {\n    if (authContext.state.signedIn) {\n      setSending(true);\n      const baseURL = \"https://joonajo-portfolio.firebaseio.com/items/\";\n      const itemParam = `${itemTitle}.json`;\n      const tokenParam = `?auth=${authContext.state.idToken}`;\n      fetch(baseURL + itemParam + tokenParam, {\n        method: 'delete'\n      }).then(response => response.json()).then(data => {\n        console.log('succesfully deleted', itemTitle);\n        setSending(false);\n        portfolioContext.dispatch({\n          type: TPortfolioActionTypes.DELETE_ITEM,\n          payload: itemTitle\n        });\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: css.ItemsContainer\n  }, items && items.map(item => {\n    return __jsx(PortfolioItem, {\n      key: item.title,\n      item: item,\n      deleteItem: deleteItem\n    });\n  }), __jsx(AddPortfolioItem, {\n    add: addItemToDatabase,\n    loading: loading\n  })), __jsx(Loading, {\n    show: sending,\n    transparent: true,\n    fadeout: true\n  }));\n};\n\nexport default PortfolioItems;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Admin/PortfolioManagement/Portfolio.tsx"],"names":["React","css","require","AddPortfolioItem","AuthContext","PortfolioContext","TPortfolioActionTypes","PortfolioItem","Loading","PortfolioItems","items","sending","setSending","useState","authContext","useContext","portfolioContext","addItemToDatabase","item","state","signedIn","baseURL","title","tokenParam","idToken","fetch","method","body","then","response","json","data","deleteItem","itemTitle","itemParam","console","log","dispatch","type","DELETE_ITEM","payload","ItemsContainer","map","loading"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\nconst css = require('./Portfolio.module.css')\r\n\r\nimport AddPortfolioItem from '../AddNewItem/AddItem'\r\nimport { IPortfolioItem } from '../../../interfaces/interfaces'\r\nimport { IAuthContext, AuthContext } from '../../../context/authContext'\r\nimport { IPortfolioContext, PortfolioContext, TPortfolioActionTypes } from '../../../context/portfolioContext'\r\nimport PortfolioItem from './Item/Item'\r\nimport Loading from '../../UI/Loading/Loading'\r\n\r\ninterface IPortfolioItems {\r\n    items?: IPortfolioItem[]\r\n}\r\n\r\nconst PortfolioItems: React.FunctionComponent<IPortfolioItems> = ({ items }): JSX.Element => {\r\n    const [sending, setSending] = React.useState<boolean>(false)\r\n    const authContext: IAuthContext = React.useContext(AuthContext)\r\n    const portfolioContext: IPortfolioContext = React.useContext(PortfolioContext)\r\n\r\n    const addItemToDatabase = (item: IPortfolioItem) => {\r\n        if (authContext.state.signedIn) {\r\n            setSending(true)\r\n            const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items/'\r\n            const title: string = item.title + \".json\"\r\n            const tokenParam: string = `?auth=${authContext.state.idToken}`\r\n    \r\n            fetch(baseURL + title + tokenParam, { method: 'put', body: JSON.stringify(item) }).then(response => response.json()\r\n                .then(data => {\r\n                    setSending(false)\r\n                }))\r\n        }\r\n    }\r\n\r\n    const deleteItem = (itemTitle: string) => {\r\n        if (authContext.state.signedIn) {\r\n            setSending(true)\r\n            const baseURL: string = \"https://joonajo-portfolio.firebaseio.com/items/\"\r\n            const itemParam: string = `${itemTitle}.json`\r\n            const tokenParam: string = `?auth=${authContext.state.idToken}`\r\n    \r\n            fetch(baseURL + itemParam + tokenParam, { method: 'delete' }).then(response => response.json())\r\n                .then(data => {\r\n                    console.log('succesfully deleted', itemTitle)\r\n                    setSending(false)\r\n                    portfolioContext.dispatch!({ type: TPortfolioActionTypes.DELETE_ITEM, payload: itemTitle })\r\n                })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={css.ItemsContainer}>\r\n                { items && items.map((item: IPortfolioItem) => {\r\n                    return (\r\n                        <PortfolioItem key={item.title} item={item} deleteItem={deleteItem} />\r\n                    )\r\n                })}\r\n                <AddPortfolioItem add={addItemToDatabase} loading={loading} />\r\n            </div>\r\n            <Loading show={sending} transparent fadeout />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PortfolioItems"]},"metadata":{},"sourceType":"module"}