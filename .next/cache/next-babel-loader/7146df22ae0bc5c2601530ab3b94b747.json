{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Cover from '../../components/Cover/Cover';\nimport Content from '../../components/Content/Content';\nimport { PortfolioContext, TPortfolioActionTypes } from '../../context/portfolioContext';\nimport Layout from '../../components/UI/Layout/Layout';\nimport Loading from '../../components/UI/Loading/Loading';\n\nvar css = require('./Home.module.css');\n\nvar Home = function Home() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      bgLoaded = _React$useState2[0],\n      setBgLoaded = _React$useState2[1];\n\n  var _React$useState3 = React.useState(true),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      loading = _React$useState4[0],\n      setLoading = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      ready = _React$useState6[0],\n      setReady = _React$useState6[1];\n\n  React.useEffect(function () {\n    if (bgLoaded && !loading) setReady(true);\n  }, [bgLoaded, loading]);\n  React.useEffect(function () {\n    // check if bg image is already cached\n    // if yes, set as loaded\n    var image = new Image();\n    image.src = '/images/palm.png';\n    if (image.complete) setBgLoaded(true);\n  }, []);\n  var portfolioContext = React.useContext(PortfolioContext);\n  var portfolioState = portfolioContext.state;\n  var portfolioDispatch = portfolioContext.dispatch;\n  React.useEffect(function () {\n    if (portfolioState && portfolioDispatch) {\n      if (portfolioState.items.length === 0) {\n        var baseURL = 'https://joonajo-portfolio.firebaseio.com/items.json';\n        var newItems = [];\n        fetch(baseURL, {\n          method: 'get'\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data) {\n            _Object$keys(data).forEach(function (item) {\n              newItems.push(data[item]);\n            });\n\n            portfolioDispatch({\n              type: TPortfolioActionTypes.SET_ITEMS,\n              payload: newItems\n            });\n          }\n\n          setLoading(false);\n        });\n      }\n    }\n  }, [portfolioState]);\n  return __jsx(React.Fragment, null, __jsx(Loading, {\n    show: !ready,\n    slideout: true\n  }), __jsx(Layout, null, __jsx(Cover, {\n    show: ready,\n    load: function load() {\n      return setBgLoaded(true);\n    }\n  }), bgLoaded && !loading && __jsx(Content, null)));\n};\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}