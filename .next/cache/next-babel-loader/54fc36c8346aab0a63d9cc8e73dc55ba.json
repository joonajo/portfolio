{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\n\nconst css = require('./Portfolio.module.css');\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../../icons/icons';\nimport AddPortfolioItem from '../AddNewItem/AddNewItem';\nimport { AuthContext } from '../../../context/authContext';\nimport { PortfolioContext, TPortfolioActionTypes } from '../../../context/portfolioContext';\n\nconst PortfolioItems = ({\n  items\n}) => {\n  return __jsx(\"div\", {\n    className: css.ItemsContainer\n  }, items && items.map(item => {\n    return __jsx(PortfolioItem, _extends({\n      key: item.title\n    }, item));\n  }), __jsx(AddPortfolioItem, null));\n};\n\nconst PortfolioItem = props => {\n  const authContext = React.useContext(AuthContext);\n  const portfolioContext = React.useContext(PortfolioContext);\n  const [confirmDelete, setConfirmDelete] = React.useState(false);\n\n  const deleteHandler = () => {\n    setConfirmDelete(true);\n  };\n\n  const deleteItem = () => {\n    if (authContext.state.signedIn) {\n      const baseURL = \"https://joonajo-portfolio.firebaseio.com/items/\";\n      const itemParam = `${props.title}.json`;\n      const tokenParam = `?auth=${authContext.state.idToken}`;\n      fetch(baseURL + itemParam + tokenParam, {\n        method: 'delete'\n      }).then(response => response.json()).then(data => {\n        console.log('succesfully deleted', props.title);\n      });\n      portfolioContext.dispatch({\n        type: TPortfolioActionTypes.DELETE_ITEM,\n        payload: props.title\n      });\n    }\n\n    setConfirmDelete(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: css.ItemContainer\n  }, __jsx(\"div\", {\n    className: css.ItemMainContent\n  }, __jsx(\"p\", null, props.title)), __jsx(\"div\", {\n    className: css.ItemHoverContent\n  }, __jsx(\"div\", null, \" \", __jsx(FontAwesomeIcon, {\n    icon: icons.faEdit\n  }), \" \", __jsx(\"p\", null, \"edit\"), \" \"), __jsx(\"div\", {\n    onClick: deleteHandler\n  }, \" \", __jsx(FontAwesomeIcon, {\n    icon: icons.faTrash\n  }), \" \", __jsx(\"p\", null, \"delete\"), \" \"))), confirmDelete && __jsx(ConfirmDelete, {\n    confirm: deleteItem,\n    cancel: () => setConfirmDelete(false)\n  }));\n};\n\nconst ConfirmDelete = ({\n  confirm,\n  cancel\n}) => {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: css.ConfirmDeleteContainer\n  }, __jsx(\"h2\", {\n    className: css.ConfirmDeleteText\n  }, \"Confirm Delete\"), __jsx(\"div\", {\n    className: css.ConfirmDeleteButtons\n  }, __jsx(\"p\", {\n    onClick: confirm\n  }, \"Delete\"), __jsx(\"p\", {\n    onClick: cancel\n  }, \"Cancel\"))), __jsx(\"div\", {\n    className: css.ConfirmBackdrop\n  }));\n};\n\nexport default PortfolioItems;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Admin/PortfolioManagement/Portfolio.tsx"],"names":["React","css","require","FontAwesomeIcon","icons","AddPortfolioItem","AuthContext","PortfolioContext","TPortfolioActionTypes","PortfolioItems","items","ItemsContainer","map","item","title","PortfolioItem","props","authContext","useContext","portfolioContext","confirmDelete","setConfirmDelete","useState","deleteHandler","deleteItem","state","signedIn","baseURL","itemParam","tokenParam","idToken","fetch","method","then","response","json","data","console","log","dispatch","type","DELETE_ITEM","payload","ItemContainer","ItemMainContent","ItemHoverContent","faEdit","faTrash","ConfirmDelete","confirm","cancel","ConfirmDeleteContainer","ConfirmDeleteText","ConfirmDeleteButtons","ConfirmBackdrop"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\nconst css = require('./Portfolio.module.css')\r\n\r\nimport { IPortfolioItem } from '../../../interfaces/interfaces'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { icons } from '../../../icons/icons'\r\nimport AddPortfolioItem from '../AddNewItem/AddNewItem'\r\nimport { IAuthContext, AuthContext } from '../../../context/authContext'\r\nimport { IPortfolioContext, PortfolioContext, TPortfolioActionTypes } from '../../../context/portfolioContext'\r\n\r\ninterface IPortfolioItems {\r\n    items?: IPortfolioItem[]\r\n}\r\n\r\nconst PortfolioItems: React.FunctionComponent<IPortfolioItems> = ({ items }): JSX.Element => {\r\n    return (\r\n        <div className={css.ItemsContainer}>\r\n            { items && items.map((item: IPortfolioItem) => {\r\n                return (\r\n                    <PortfolioItem key={item.title} {...item} />\r\n                )\r\n            })}\r\n            <AddPortfolioItem />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PortfolioItem: React.FunctionComponent<IPortfolioItem> = (props): JSX.Element => {\r\n    const authContext: IAuthContext = React.useContext(AuthContext)\r\n    const portfolioContext: IPortfolioContext = React.useContext(PortfolioContext)\r\n\r\n    const [confirmDelete, setConfirmDelete] = React.useState<boolean>(false)\r\n\r\n    const deleteHandler = () => {\r\n        setConfirmDelete(true)\r\n    }\r\n    \r\n    const deleteItem = () => {\r\n        if (authContext.state.signedIn) {\r\n            const baseURL: string = \"https://joonajo-portfolio.firebaseio.com/items/\"\r\n            const itemParam: string = `${props.title}.json`\r\n            const tokenParam: string = `?auth=${authContext.state.idToken}`\r\n    \r\n            fetch(baseURL + itemParam + tokenParam, { method: 'delete' }).then(response => response.json())\r\n                .then(data => {\r\n                    console.log('succesfully deleted', props.title)\r\n                })\r\n    \r\n            portfolioContext.dispatch!({ type: TPortfolioActionTypes.DELETE_ITEM, payload: props.title })\r\n        }\r\n        setConfirmDelete(false)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className={css.ItemContainer}>\r\n                <div className={css.ItemMainContent}>\r\n                    <p>{props.title}</p>\r\n                </div>\r\n                <div className={css.ItemHoverContent}>\r\n                    <div> <FontAwesomeIcon icon={icons.faEdit} /> <p>edit</p> </div>\r\n                    <div onClick={deleteHandler}> <FontAwesomeIcon icon={icons.faTrash} /> <p>delete</p> </div>\r\n                </div>  \r\n            </div>\r\n            { confirmDelete && <ConfirmDelete confirm={deleteItem} cancel={() => setConfirmDelete(false)} /> }\r\n        </>\r\n    )\r\n}\r\n\r\ninterface IConfirmDeleteComponent {\r\n    confirm: () => void\r\n    cancel: () => void\r\n}\r\n\r\nconst ConfirmDelete: React.FunctionComponent<IConfirmDeleteComponent> = ({ confirm, cancel }): JSX.Element => {\r\n    return (\r\n        <>\r\n            <div className={css.ConfirmDeleteContainer}>\r\n                <h2 className={css.ConfirmDeleteText}>Confirm Delete</h2>\r\n                <div className={css.ConfirmDeleteButtons}>\r\n                    <p onClick={confirm}>Delete</p>\r\n                    <p onClick={cancel}>Cancel</p>\r\n                </div>\r\n            </div>\r\n            <div className={css.ConfirmBackdrop}></div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PortfolioItems"]},"metadata":{},"sourceType":"module"}