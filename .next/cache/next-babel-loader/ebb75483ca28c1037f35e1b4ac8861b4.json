{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport App from 'next/app';\nimport { AuthProvider } from '../context/authContext';\nimport { PortfolioProvider } from '../context/portfolioContext';\n\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n  componentDidMount() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.register('/service-worker.js').then(registration => {\n        console.log('service worker registration successful');\n      }).catch(err => {\n        console.warn('service worker registration failed', err.message);\n      });\n    } // if ('serviceWorker' in navigator) {\n    //   navigator.serviceWorker.getRegistration()\n    //     .then(registration => {\n    //       if (registration) {\n    //         registration.unregister()\n    //       }\n    //     })\n    // }\n\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(AuthProvider, null, __jsx(PortfolioProvider, null, __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}