{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { formTypes } from '../../../form/form';\nimport { icons } from '../../../icons/icons';\nimport { AuthContext } from '../../../context/authContext';\nimport ItemForm from '../ItemForm/ItemForm';\nimport Loading from '../../UI/Loading/Loading';\n\nvar css = require('./AddItem.module.css');\n\nvar AddPortfolioItem = function AddPortfolioItem() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showForm = _React$useState2[0],\n      setShowForm = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      sending = _React$useState4[0],\n      setSending = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      success = _React$useState6[0],\n      setSuccess = _React$useState6[1];\n\n  var authContext = React.useContext(AuthContext);\n  React.useEffect(function () {\n    // reset success state when we close the form\n    if (!showForm && success) setSuccess(false);\n  }, [showForm]);\n\n  var addSuccess = function addSuccess() {\n    setSuccess(true);\n    setSending(false);\n    setShowForm(false);\n  };\n\n  var addItemToDatabase = function addItemToDatabase(item) {\n    if (authContext.state.signedIn) {\n      setSending(true);\n      var baseURL = 'https://joonajo-portfolio.firebaseio.com/items/';\n      var title = item.title + \".json\";\n      var tokenParam = \"?auth=\".concat(authContext.state.idToken);\n      fetch(baseURL + title + tokenParam, {\n        method: 'put',\n        body: _JSON$stringify(item)\n      }).then(function (response) {\n        return response.json().then(function (data) {\n          addSuccess();\n        });\n      });\n    }\n  };\n\n  var clickHandler = function clickHandler() {\n    setShowForm(true);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: css.AddItemContainer\n  }, __jsx(\"span\", {\n    className: css.AddItemButton,\n    onClick: clickHandler\n  }, \"add item \", __jsx(FontAwesomeIcon, {\n    icon: icons.faPlus,\n    className: css.AddItemIcon\n  })), __jsx(ItemForm, {\n    type: formTypes.ADD,\n    show: showForm,\n    close: function close() {\n      return setShowForm(false);\n    },\n    add: addItemToDatabase,\n    sending: sending\n  })), __jsx(Loading, {\n    show: sending\n  }));\n};\n\nexport default AddPortfolioItem;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Admin/AddNewItem/AddItem.tsx"],"names":["React","FontAwesomeIcon","formTypes","icons","AuthContext","ItemForm","Loading","css","require","AddPortfolioItem","useState","showForm","setShowForm","sending","setSending","success","setSuccess","authContext","useContext","useEffect","addSuccess","addItemToDatabase","item","state","signedIn","baseURL","title","tokenParam","idToken","fetch","method","body","then","response","json","data","clickHandler","AddItemContainer","AddItemButton","faPlus","AddItemIcon","ADD"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { formTypes } from '../../../form/form'\r\nimport { icons } from '../../../icons/icons'\r\nimport { IAuthContext, AuthContext } from '../../../context/authContext'\r\nimport { IPortfolioContext, PortfolioContext, TPortfolioActionTypes } from '../../../context/portfolioContext'\r\nimport { IPortfolioItem } from '../../../interfaces/interfaces'\r\nimport ItemForm from '../ItemForm/ItemForm'\r\nimport Loading from '../../UI/Loading/Loading'\r\n\r\nconst css = require('./AddItem.module.css')\r\n\r\nconst AddPortfolioItem: React.FunctionComponent = (): JSX.Element => {\r\n    const [showForm, setShowForm] = React.useState<boolean>(false)\r\n    const [sending, setSending] = React.useState<boolean>(false)\r\n    const [success, setSuccess] = React.useState<boolean>(false)\r\n    const authContext: IAuthContext = React.useContext(AuthContext)\r\n\r\n    React.useEffect(() => {\r\n        // reset success state when we close the form\r\n        if (!showForm && success) setSuccess(false) \r\n    }, [showForm])\r\n\r\n    const addSuccess = () => {\r\n        setSuccess(true)\r\n        setSending(false)\r\n        setShowForm(false)\r\n    }\r\n\r\n    const addItemToDatabase = (item: IPortfolioItem) => {\r\n        if (authContext.state.signedIn) {\r\n            setSending(true)\r\n            const baseURL: string = 'https://joonajo-portfolio.firebaseio.com/items/'\r\n            const title: string = item.title + \".json\"\r\n            const tokenParam: string = `?auth=${authContext.state.idToken}`\r\n    \r\n            fetch(baseURL + title + tokenParam, { method: 'put', body: JSON.stringify(item) }).then(response => response.json()\r\n                .then(data => {\r\n                    addSuccess()\r\n                }))\r\n        }\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        setShowForm(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={css.AddItemContainer}>\r\n                <span className={css.AddItemButton} onClick={clickHandler}>add item <FontAwesomeIcon icon={icons.faPlus} className={css.AddItemIcon} /></span>\r\n                <ItemForm type={formTypes.ADD} show={showForm} close={() => setShowForm(false)} add={addItemToDatabase} sending={sending}/>\r\n            </div>\r\n            <Loading show={sending} /> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddPortfolioItem"]},"metadata":{},"sourceType":"module"}