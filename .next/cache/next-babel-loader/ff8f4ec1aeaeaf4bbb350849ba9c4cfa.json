{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport let formTypes;\n\n(function (formTypes) {\n  formTypes[\"ADD\"] = \"add\";\n  formTypes[\"EDIT\"] = \"edit\";\n})(formTypes || (formTypes = {}));\n\nexport const initialForm = {\n  title: {\n    id: 'title',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'title',\n    require: true,\n    value: ''\n  },\n  description: {\n    id: 'description',\n    elemType: 'textarea',\n    type: 'text',\n    placeholder: 'description',\n    require: true,\n    value: ''\n  },\n  language: {\n    id: 'language',\n    elemType: 'select',\n    options: {\n      React: {\n        selected: false\n      },\n      TypeScript: {\n        selected: false\n      },\n      JavaScript: {\n        selected: false\n      },\n      Cpp: {\n        selected: false\n      },\n      NextJS: {\n        selected: false\n      }\n    },\n    require: true,\n    multiple: true\n  },\n  link: {\n    id: 'link',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'link to app',\n    require: true,\n    value: ''\n  },\n  github: {\n    id: 'github',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'github link',\n    require: true,\n    value: ''\n  },\n  video_src: {\n    id: 'video_src',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'video link',\n    require: true,\n    value: ''\n  },\n  preview_src: {\n    id: 'preview_src',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'preview video link',\n    require: true,\n    value: ''\n  },\n  gif_src: {\n    id: 'gif_src',\n    elemType: 'input',\n    type: 'text',\n    placeholder: 'gif link',\n    require: true,\n    value: ''\n  },\n  desktop: {\n    id: 'desktop',\n    elemType: 'select',\n    options: {\n      Yes: {\n        selected: false\n      },\n      No: {\n        selected: false\n      }\n    },\n    require: true\n  },\n  mobile: {\n    id: 'mobile',\n    elemType: 'select',\n    options: {\n      Yes: {\n        selected: false\n      },\n      No: {\n        selected: false\n      }\n    },\n    require: true\n  },\n  order: {\n    id: 'order',\n    elemType: 'input',\n    type: 'number',\n    placeholder: 'order in the list',\n    value: ''\n  }\n};\nexport const updateEditForm = item => {\n  const updatedForm = _objectSpread({}, initialForm, {\n    title: _objectSpread({}, initialForm.title, {\n      value: item.title\n    }),\n    description: _objectSpread({}, initialForm.description, {\n      value: item.description\n    }),\n    language: _objectSpread({}, initialForm.language, {\n      options: {\n        React: {\n          selected: item.language.includes('React')\n        },\n        TypeScript: {\n          selected: item.language.includes('TypeScript')\n        },\n        JavaScript: {\n          selected: item.language.includes('JavaScript')\n        },\n        Cpp: {\n          selected: item.language.includes('Cpp')\n        },\n        NextJS: {\n          selected: item.language.includes('NextJS')\n        }\n      }\n    }),\n    link: _objectSpread({}, initialForm.link, {\n      value: item.link\n    }),\n    github: _objectSpread({}, initialForm.github, {\n      value: item.githubLink\n    }),\n    video_src: _objectSpread({}, initialForm.video_src, {\n      value: item.video_src\n    }),\n    preview_src: _objectSpread({}, initialForm.preview_src, {\n      value: item.preview_src\n    }),\n    gif_src: _objectSpread({}, initialForm.gif_src, {\n      value: item.gif_src\n    }),\n    desktop: _objectSpread({}, initialForm.desktop, {\n      options: {\n        Yes: {\n          selected: item.desktop\n        },\n        No: {\n          selected: !item.desktop\n        }\n      }\n    }),\n    mobile: _objectSpread({}, initialForm.mobile, {\n      options: {\n        Yes: {\n          selected: item.mobile\n        },\n        No: {\n          selected: !item.mobile\n        }\n      }\n    }),\n    order: _objectSpread({}, initialForm.order, {\n      value: item.order\n    })\n  });\n\n  return updatedForm;\n};","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/form/form.ts"],"names":["formTypes","initialForm","title","id","elemType","type","placeholder","require","value","description","language","options","React","selected","TypeScript","JavaScript","Cpp","NextJS","multiple","link","github","video_src","preview_src","gif_src","desktop","Yes","No","mobile","order","updateEditForm","item","updatedForm","includes","githubLink"],"mappings":"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","sourcesContent":["import { IPortfolioItem } from \"../interfaces/interfaces\"\r\n\r\nexport enum formTypes {\r\n    ADD = 'add',\r\n    EDIT = 'edit',\r\n}\r\n\r\nexport interface IForm {\r\n    [title: string]: any\r\n    description: any\r\n    language: any\r\n    link: any\r\n    github: any\r\n    video_src: any\r\n    preview_src: any\r\n    gif_src: any\r\n    desktop: any\r\n    mobile: any\r\n    order: any\r\n}\r\n\r\nexport const initialForm: IForm = {\r\n    title: {\r\n        id: 'title',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'title',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    description: {\r\n        id: 'description',\r\n        elemType: 'textarea',\r\n        type: 'text',\r\n        placeholder: 'description',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    language: {\r\n        id: 'language',\r\n        elemType: 'select',\r\n        options: {\r\n            React: {\r\n                selected: false,\r\n            },\r\n            TypeScript: {\r\n                selected: false,\r\n            },\r\n            JavaScript: {\r\n                selected: false,\r\n            },\r\n            Cpp: {\r\n                selected: false\r\n            },\r\n            NextJS: {\r\n                selected: false\r\n            }\r\n        },\r\n        require: true,\r\n        multiple: true\r\n    },\r\n    link: {\r\n        id: 'link',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'link to app',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    github: {\r\n        id: 'github',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'github link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    video_src: {\r\n        id: 'video_src',\r\n        elemType: 'input',  \r\n        type: 'text',\r\n        placeholder: 'video link',\r\n        require: true,\r\n        value: '',\r\n    }, \r\n    preview_src: {\r\n        id: 'preview_src',\r\n        elemType: 'input',  \r\n        type: 'text',\r\n        placeholder: 'preview video link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    gif_src: {\r\n        id: 'gif_src',\r\n        elemType: 'input',\r\n        type: 'text',\r\n        placeholder: 'gif link',\r\n        require: true,\r\n        value: '',\r\n    },\r\n    desktop: {\r\n        id: 'desktop',\r\n        elemType: 'select',\r\n        options: {\r\n            Yes: {\r\n                selected: false,\r\n            },\r\n            No: {\r\n                selected: false\r\n            },\r\n        },        \r\n        require: true,\r\n    },\r\n    mobile: {   \r\n        id: 'mobile',\r\n        elemType: 'select',\r\n        options: {\r\n            Yes: {\r\n                selected: false,\r\n            },\r\n            No: {\r\n                selected: false\r\n            },\r\n        }, \r\n        require: true,\r\n    },\r\n    order : {\r\n        id: 'order',\r\n        elemType: 'input',\r\n        type: 'number',\r\n        placeholder: 'order in the list',\r\n        value: '',\r\n    }\r\n}\r\n\r\nexport const updateEditForm = (item: IPortfolioItem): IForm => {\r\n    const updatedForm: IForm = {\r\n        ...initialForm,\r\n        title: {\r\n            ...initialForm.title,\r\n            value: item.title,\r\n        },\r\n        description: {\r\n            ...initialForm.description,\r\n            value: item.description,\r\n        },\r\n        language: {\r\n            ...initialForm.language,\r\n            options: {\r\n                React: {\r\n                    selected: item.language.includes('React'),\r\n                },\r\n                TypeScript: {\r\n                    selected: item.language.includes('TypeScript'),\r\n                },\r\n                JavaScript: {\r\n                    selected: item.language.includes('JavaScript'),\r\n                },\r\n                Cpp: {\r\n                    selected: item.language.includes('Cpp'),\r\n                },\r\n                NextJS: {\r\n                    selected: item.language.includes('NextJS'),\r\n                }\r\n            },\r\n        },\r\n        link: {\r\n            ...initialForm.link,\r\n            value: item.link,\r\n        },\r\n        github: {\r\n            ...initialForm.github,\r\n            value: item.githubLink,\r\n        },\r\n        video_src: {\r\n            ...initialForm.video_src,\r\n            value: item.video_src\r\n        },\r\n        preview_src: {\r\n            ...initialForm.preview_src,\r\n            value: item.preview_src\r\n        },\r\n        gif_src: {\r\n            ...initialForm.gif_src,\r\n            value: item.gif_src\r\n        },\r\n        desktop: {\r\n            ...initialForm.desktop,\r\n            options: {\r\n                Yes: {\r\n                    selected: item.desktop\r\n                },\r\n                No: {\r\n                    selected: !item.desktop\r\n                }\r\n            }\r\n        },\r\n        mobile: {\r\n            ...initialForm.mobile,\r\n            options: {\r\n                Yes: {\r\n                    selected: item.mobile\r\n                },\r\n                No: {\r\n                    selected: !item.mobile\r\n                }\r\n            }\r\n        },\r\n        order: {\r\n            ...initialForm.order,\r\n            value: item.order\r\n        }\r\n    }    \r\n\r\n    return updatedForm\r\n}"]},"metadata":{},"sourceType":"module"}