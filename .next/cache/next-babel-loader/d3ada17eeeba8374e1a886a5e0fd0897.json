{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport zenscroll from 'zenscroll';\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { icons } from '../../icons/icons';\n\nconst css = require('./Cover.module.css');\n\nconst Cover = React.memo(({\n  show,\n  load\n}) => {\n  const coverRef = React.useRef(null);\n  const [height, setHeight] = React.useState(undefined);\n  React.useEffect(() => {\n    setHeight(window.innerHeight);\n  }, []);\n  const scrollToPortfolio = React.useCallback(() => {\n    if (coverRef && coverRef.current) {\n      const posToScrollTo = coverRef.current.clientHeight;\n      zenscroll.toY(posToScrollTo);\n    }\n  }, [coverRef]);\n  const containerStyles = [css.Main, show && css.loaded].join(' ');\n  return __jsx(\"div\", {\n    className: containerStyles,\n    ref: coverRef,\n    style: {\n      height: `${height}px`\n    }\n  }, __jsx(\"div\", {\n    className: css.BackgroundContainer\n  }, __jsx(\"img\", {\n    src: `/images/palm.png`,\n    alt: \"cover-bg-palm\",\n    className: css.BackgroundImage,\n    onLoad: load\n  }), __jsx(\"div\", {\n    className: css.BackgroundMask\n  })), __jsx(\"div\", {\n    className: css.CoverContent\n  }, __jsx(\"div\", {\n    className: css.MediaIcons\n  }, __jsx(MediaIcons, {\n    vertical: true\n  })), __jsx(\"div\", {\n    className: css.TitleContainer\n  }, __jsx(AnimatedText, {\n    text: \"Joona\",\n    show: show\n  }), __jsx(AnimatedText, {\n    text: \"Joenpolvi\",\n    show: show,\n    delay: .5\n  }), __jsx(\"h3\", {\n    className: css.Description\n  }, \" \", __jsx(\"span\", null, \"<Front End Developer />\"), \" \")), __jsx(\"div\", {\n    className: css.ArrowContainer\n  }, __jsx(\"div\", {\n    className: css.ArrowIcon,\n    onClick: scrollToPortfolio\n  }, __jsx(FontAwesomeIcon, {\n    icon: icons.faChevronDown,\n    size: \"lg\"\n  })), __jsx(\"p\", {\n    className: css.ArrowText\n  }, \"to portfolio\"))));\n});\n\nconst AnimatedText = ({\n  text,\n  show,\n  delay\n}) => {\n  const containerStyles = [css.AnimatedText, show && css.loaded].join(' ');\n  return __jsx(\"div\", {\n    className: containerStyles,\n    style: {\n      transitionDelay: `${delay}s`\n    }\n  }, text, __jsx(\"span\", {\n    style: {\n      transitionDelay: `${delay}s`,\n      animationDelay: `${delay}s`\n    }\n  }, text), __jsx(\"span\", {\n    style: {\n      transitionDelay: `${delay}s`,\n      animationDelay: `${delay}s`\n    }\n  }, text), __jsx(\"span\", {\n    style: {\n      transitionDelay: `${delay}s`,\n      animationDelay: `${delay}s`\n    }\n  }, text), __jsx(\"span\", {\n    style: {\n      transitionDelay: `${delay}s`,\n      animationDelay: `${delay}s`\n    }\n  }, text));\n};\n\nexport default Cover;","map":{"version":3,"sources":["C:/Users/jouna/code/portfolio/components/Cover/Cover.tsx"],"names":["React","zenscroll","MediaIcons","FontAwesomeIcon","icons","css","require","Cover","memo","show","load","coverRef","useRef","height","setHeight","useState","undefined","useEffect","window","innerHeight","scrollToPortfolio","useCallback","current","posToScrollTo","clientHeight","toY","containerStyles","Main","loaded","join","BackgroundContainer","BackgroundImage","BackgroundMask","CoverContent","TitleContainer","Description","ArrowContainer","ArrowIcon","faChevronDown","ArrowText","AnimatedText","text","delay","transitionDelay","animationDelay"],"mappings":"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","sourcesContent":["import React from 'react'\nimport zenscroll from 'zenscroll'\n\nimport MediaIcons from '../UI/Icons/MediaIcons/MediaIcons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { icons } from '../../icons/icons'\n\nconst css = require('./Cover.module.css')\n\ntype TCover = {\n    show: boolean\n    load: () => void\n}\n\nconst Cover: React.FunctionComponent<TCover> = React.memo(({ show, load }): JSX.Element => {\n    const coverRef = React.useRef<HTMLDivElement>(null)\n    const [height, setHeight] = React.useState<number | undefined>(undefined)\n\n    React.useEffect(() => {\n        setHeight(window.innerHeight)\n    }, [])\n\n    const scrollToPortfolio = React.useCallback(() => {\n        if (coverRef && coverRef.current) {\n            const posToScrollTo: number = coverRef.current.clientHeight\n    \n            zenscroll.toY(posToScrollTo)\n        }\n    }, [coverRef])\n\n    const containerStyles = [\n        css.Main,\n        show && css.loaded\n    ].join(' ')\n\n    return (\n        <div className={containerStyles} ref={coverRef} style={{height: `${height}px`}}>\n            <div className={css.BackgroundContainer}>\n                <img src={`/images/palm.png`} alt=\"cover-bg-palm\" className={css.BackgroundImage} onLoad={load} />\n                <div className={css.BackgroundMask} />\n            </div>\n            <div className={css.CoverContent}>\n                <div className={css.MediaIcons}>\n                    <MediaIcons vertical />\n                </div>\n                <div className={css.TitleContainer}>\n                    <AnimatedText text='Joona' show={show} />\n                    <AnimatedText text='Joenpolvi' show={show} delay={.5} />\n                    <h3 className={css.Description}> <span>{\"<Front End Developer />\"}</span> </h3>\n                </div>\n                <div className={css.ArrowContainer} >\n                    <div className={css.ArrowIcon}\n                        onClick={scrollToPortfolio}> \n                        <FontAwesomeIcon icon={icons.faChevronDown} size=\"lg\" />\n                    </div>\n                    <p className={css.ArrowText}>to portfolio</p>\n                </div>\n            </div>\n        </div>\n    )\n})\n\ninterface IAnimatedText {\n    text: string\n    show: boolean\n    delay?: number\n}\n\nconst AnimatedText: React.FunctionComponent<IAnimatedText> = ({ text, show, delay }): JSX.Element => {\n    const containerStyles = [\n        css.AnimatedText,\n        show && css.loaded\n    ].join(' ')\n   \n    return (\n        <div className={containerStyles} style={{transitionDelay: `${delay}s`}}>\n            {text}\n            <span style={{transitionDelay: `${delay}s`, animationDelay: `${delay}s`}}>{text}</span>\n            <span style={{transitionDelay: `${delay}s`, animationDelay: `${delay}s`}}>{text}</span>\n            <span style={{transitionDelay: `${delay}s`, animationDelay: `${delay}s`}}>{text}</span>\n            <span style={{transitionDelay: `${delay}s`, animationDelay: `${delay}s`}}>{text}</span>\n        </div>\n    )\n}\n\n\nexport default Cover"]},"metadata":{},"sourceType":"module"}