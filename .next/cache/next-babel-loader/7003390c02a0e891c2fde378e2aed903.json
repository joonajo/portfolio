{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport { formTypes } from '../../../form/form';\nimport ItemForm from '../ItemForm/ItemForm';\nimport { AuthContext } from '../../../context/authContext';\nimport Loading from '../../UI/Loading/Loading';\n\nconst css = require('./EditItem.module.css');\n\nconst EditItem = ({\n  show,\n  item,\n  close\n}) => {\n  const [sending, setSending] = React.useState(false);\n  const authContext = React.useContext(AuthContext);\n\n  const editItem = item => {\n    if (authContext.state.signedIn) {\n      setSending(true);\n      const baseURL = 'https://joonajo-portfolio.firebaseio.com/items/';\n      const title = item.title + \".json\";\n      const tokenParam = `?auth=${authContext.state.idToken}`;\n      fetch(baseURL + title + tokenParam, {\n        method: 'put',\n        body: _JSON$stringify(item)\n      }).then(response => response.json().then(data => {\n        setSending(false);\n      }));\n      close();\n    }\n  };\n\n  const containerStyles = [css.EditItemContainer, show && css.show].join(' ');\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: containerStyles\n  }, __jsx(ItemForm, {\n    type: formTypes.EDIT,\n    show: show,\n    sending: sending,\n    item: item,\n    close: close,\n    add: editItem\n  })), __jsx(Loading, {\n    show: sending,\n    transparent: true,\n    fadeout: true\n  }));\n};\n\nexport default EditItem;","map":null,"metadata":{},"sourceType":"module"}