{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nexport var Languages = {\n  React: 'React',\n  TypeScript: 'TypeScript',\n  JavaScript: 'JavaScript',\n  Cpp: 'C++',\n  NextJS: 'NextJS'\n};\nexport var TPortfolioActionTypes;\n\n(function (TPortfolioActionTypes) {\n  TPortfolioActionTypes[\"SET_ITEMS\"] = \"SET_ITEMS\";\n  TPortfolioActionTypes[\"EDIT_ITEM\"] = \"EDIT_ITEM\";\n  TPortfolioActionTypes[\"DELETE_ITEM\"] = \"DELETE_ITEM\";\n  TPortfolioActionTypes[\"ADD_ITEM\"] = \"ADD_ITEM\";\n})(TPortfolioActionTypes || (TPortfolioActionTypes = {}));\n\nexport var initialPortfolioState = {\n  items: []\n};\n\nvar sortItems = function sortItems(itemA, itemB) {\n  return itemA.order - itemB.order;\n};\n\nvar setItems = function setItems(state, action) {\n  if (action.type !== TPortfolioActionTypes.SET_ITEMS) return _objectSpread({}, state);\n\n  var sortedItems = _toConsumableArray(action.payload).sort(sortItems);\n\n  return _objectSpread({}, state, {\n    items: sortedItems\n  });\n};\n\nvar addItem = function addItem(state, action) {\n  if (action.type !== TPortfolioActionTypes.ADD_ITEM) return _objectSpread({}, state);\n\n  var updatedItems = _toConsumableArray(state.items);\n\n  updatedItems.push(action.payload);\n  return _objectSpread({}, state, {\n    items: updatedItems\n  });\n};\n\nvar deleteItem = function deleteItem(state, action) {\n  if (action.type !== TPortfolioActionTypes.DELETE_ITEM) return _objectSpread({}, state);\n\n  var updatedItems = _toConsumableArray(state.items).filter(function (item) {\n    return item.title !== action.payload;\n  });\n\n  return _objectSpread({}, state, {\n    items: updatedItems\n  });\n};\n\nvar editItem = function editItem(state, action) {\n  if (action.type !== TPortfolioActionTypes.EDIT_ITEM) return _objectSpread({}, state);\n  return _objectSpread({}, state);\n};\n\nexport var portfolioReducer = function portfolioReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialPortfolioState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case TPortfolioActionTypes.SET_ITEMS:\n      return setItems(state, action);\n\n    case TPortfolioActionTypes.DELETE_ITEM:\n      return deleteItem(state, action);\n\n    case TPortfolioActionTypes.EDIT_ITEM:\n      return editItem(state, action);\n\n    case TPortfolioActionTypes.ADD_ITEM:\n      return addItem(state, action);\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\nexport var PortfolioContext = React.createContext({\n  state: initialPortfolioState\n});\nexport var PortfolioProvider = function PortfolioProvider(_ref) {\n  var children = _ref.children;\n\n  var _React$useReducer = React.useReducer(portfolioReducer, initialPortfolioState),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  return __jsx(PortfolioContext.Provider, {\n    value: {\n      state: state,\n      dispatch: dispatch\n    }\n  }, children);\n};","map":null,"metadata":{},"sourceType":"module"}