{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.e8f0ea70476841f80d9f.hot-update.js","sources":["webpack:///./containers/Home/Home.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nimport {Â NextPage } from 'next'\r\nimport Cover from '../../components/Cover/Cover'\r\nimport Layout from '../../components/UI/Layout/Layout'\r\nimport Content from '../../components/Content/Content'\r\nimport { CubeSpinner } from '../../components/UI/Spinner/Spinner'\r\nimport { IPortfolioContext, PortfolioContext, TPortfolioState, TPortfolioActionTypes } from '../../context/portfolioContext'\r\nimport { TDispatch } from '../../context/authContext'\r\nimport { IPortfolioItem } from '../../interfaces/interfaces'\r\n\r\nconst css = require('./Home.module.css')\r\n\r\nconst Home: NextPage = (): JSX.Element => {\r\n    const [bgLoaded, setBgLoaded] = React.useState<boolean>(false)\r\n    const [loading, setLoading] = React.useState<boolean>(true)\r\n    const [ready, setReady] = React.useState<boolean>(false)\r\n\r\n    React.useEffect(() => {\r\n        if (bgLoaded && !loading) setReady(true) \r\n    }, [bgLoaded, loading])\r\n\r\n    React.useEffect(() => {\r\n        // check if bg image is already cached\r\n        // if yes, set as loaded\r\n        const image = new Image()\r\n        image.src = '/images/palm.png'\r\n        if (image.complete) setBgLoaded(true)\r\n    }, [])\r\n\r\n    const portfolioContext: IPortfolioContext = React.useContext(PortfolioContext)\r\n    const portfolioState: TPortfolioState = portfolioContext.state\r\n    const portfolioDispatch: TDispatch = portfolioContext.dispatch!\r\n\r\n    if (portfolioState.items.length === 0) {\r\n        if (portfolioState.items.length === 0) {\r\n            portfolioDispatch({ type: TPortfolioActionTypes.FETCH_ITEMS })\r\n        } else {\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Loading show={!ready} />\r\n            <Layout>\r\n                <Cover show={ready} load={() => setBgLoaded(true)} />\r\n                { bgLoaded  && !loading && <Content /> }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\ninterface ILoadingComponent {\r\n    show: boolean\r\n}\r\n\r\nconst Loading: React.FunctionComponent<ILoadingComponent> = ({ show }): JSX.Element => {\r\n    const styles = [\r\n        css.Loading,\r\n        !show && css.out\r\n    ].join(' ')\r\n\r\n    return (\r\n        <div className={styles}>\r\n            <CubeSpinner />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAKA;AAAA;AACA;AAKA;AACA;AAAA;AAIA;AACA;AACA;;;;A","sourceRoot":""}